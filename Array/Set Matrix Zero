/// Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's.

You must do it in place.
////////////////////////
This was my first code .
class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        /*     
logic 
i/j th index is having a 0
here i can store the value of i and j for later to transform them to 0s 
lets try this
         */
         int m = matrix.size();
         int n = matrix[0].size();
         set<int>s1;
         set<int>s2;
         for(int i=0;i<m;i++)
         {
             for(int j =0;j<n;j++)
             {
                 if(matrix[i][j]==0){
                     s1.insert(i);
                     s2.insert(j);
                 }
             }
         }
         for(int i=0;i<m;i++)
         {
                 if(s1.find(i)!=s1.end())
                 {
                     for(int j = 0;j<n;j++){
                           matrix[i][j]=0;

                     }
                   
                 }     
             
         }
         for(int j=0;j<n;j++)
         {
                 if(s2.find(j)!=s2.end())
                 {
                     for(int i = 0;i<m;i++){
                           matrix[i][j]=0;

                     }
                   
                 }     
             
         }
    }
};
********* Now i am going to try some more optimized code
class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        /*     
logic 
i/j th index is having a 0
here i can store the value of i and j for later to transform them to 0s 
lets try this
         */
         int m = matrix.size();
         int n = matrix[0].size();
         set<int>s1;
         set<int>s2;
         for(int i=0;i<m;i++)
         {
             for(int j =0;j<n;j++)
             {
                 if(matrix[i][j]==0){
                     s1.insert(i);
                     s2.insert(j);
                 }
             }
         }
         for(int i=0; i<m; i++){
            for(int j=0; j<n; j++){
                if(s1.count(i) > 0 || s2.count(j) > 0){
                    matrix[i][j] = 0;
                }
            }
         }
    }
};

***** Now trying for a constant space *****
it can be done so using two flags for both the 0th row and column t treat them as a coordinate row/column . By thus you have to write the solution.




